# Nginxプロセスが実行されるユーザーを指定する
user  nginx;

# Nginxが使用するワーカープロセスの数を自動的に設定する。
# autoを指定する事で、利用可能なCPUの数に基づいて最適な数のワーカープロセスが起動される
worker_processes  auto;

# エラーログの出力先とログレベルを設定
# この設定では、/var/log/nginx/error.logファイルにnoticeレベル以上のエラーログが記録される
error_log  /var/log/nginx/error.log notice;

# NginxのプロセスID（PID）ファイルのパスを指定する
# この設定では、/var/run/nginx.pidというファイルにPIDが保存される。
pid        /var/run/nginx.pid;


# イベントモジュールの設定する
# worker_connectionsは、同時に接続を処理できる最大数を指定する
events {
    worker_connections  1024;
}

# HTTPモジュールの設定をする
http {
    # HTTPモジュールの設定を行っています。includeディレクティブは別の設定ファイルを読み込むために使用される
    # この設定では、MIMEタイプの定義が含まれる/etc/nginx/mime.typesファイルを読み込む
    # default_typeディレクティブでは、未知のMIMEタイプに対してapplication/octet-streamをデフォルトとして指定する
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # ログのフォーマットの設定を行う
    # log_formatディレクティブでは、ログの出力形式を指定する
    # この設定では、mainという名前のログフォーマットが定義されており、各項目の値を特定のフォーマットで表示するように設定されている
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    # アクセスログの出力先とログフォーマットを指定する
    # この設定では、/var/log/nginx/access.logファイルにアクセスログが記録される
    # ログのフォーマットは、先ほど定義したmainが使用される
    access_log  /var/log/nginx/access.log  main;

    # 静的ファイルの送信にsendfileシステムコールを使用するように設定する
    # この設定により、高速なファイル転送が可能になる。
    sendfile        on;
    #tcp_nopush     on;

    # クライアントとの接続を保持するタイムアウト時間を設定する
    # この設定では、65秒と指定している
    keepalive_timeout  65;

    #gzip  on;

    # /etc/nginx/conf.d/ディレクトリ内の.conf拡張子を持つ設定ファイルを読み込むように設定する
    # このディレクトリは、サーバーブロックやプロキシ設定など、追加の設定ファイルを配置することが可能となる
    include /etc/nginx/conf.d/*.conf;
}
